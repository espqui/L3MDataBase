//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sitio.ReferenciaServicios {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReferenciaServicios.IServicioWCF")]
    public interface IServicioWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCF/InsertarProveedor", ReplyAction="http://tempuri.org/IServicioWCF/InsertarProveedorResponse")]
        int InsertarProveedor(Entidades.PROVEEDOR dato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCF/InsertarProveedor", ReplyAction="http://tempuri.org/IServicioWCF/InsertarProveedorResponse")]
        System.Threading.Tasks.Task<int> InsertarProveedorAsync(Entidades.PROVEEDOR dato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCF/ModificarProveedor", ReplyAction="http://tempuri.org/IServicioWCF/ModificarProveedorResponse")]
        bool ModificarProveedor(Entidades.PROVEEDOR dato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCF/ModificarProveedor", ReplyAction="http://tempuri.org/IServicioWCF/ModificarProveedorResponse")]
        System.Threading.Tasks.Task<bool> ModificarProveedorAsync(Entidades.PROVEEDOR dato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCF/EliminarProveedor", ReplyAction="http://tempuri.org/IServicioWCF/EliminarProveedorResponse")]
        bool EliminarProveedor(Entidades.PROVEEDOR dato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCF/EliminarProveedor", ReplyAction="http://tempuri.org/IServicioWCF/EliminarProveedorResponse")]
        System.Threading.Tasks.Task<bool> EliminarProveedorAsync(Entidades.PROVEEDOR dato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCF/RetonarListadoProveedores", ReplyAction="http://tempuri.org/IServicioWCF/RetonarListadoProveedoresResponse")]
        System.Collections.Generic.List<Entidades.PROVEEDOR> RetonarListadoProveedores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCF/RetonarListadoProveedores", ReplyAction="http://tempuri.org/IServicioWCF/RetonarListadoProveedoresResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Entidades.PROVEEDOR>> RetonarListadoProveedoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCF/RetornarProveedorPorCed", ReplyAction="http://tempuri.org/IServicioWCF/RetornarProveedorPorCedResponse")]
        Entidades.PROVEEDOR RetornarProveedorPorCed(Entidades.PROVEEDOR dato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioWCF/RetornarProveedorPorCed", ReplyAction="http://tempuri.org/IServicioWCF/RetornarProveedorPorCedResponse")]
        System.Threading.Tasks.Task<Entidades.PROVEEDOR> RetornarProveedorPorCedAsync(Entidades.PROVEEDOR dato);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioWCFChannel : Sitio.ReferenciaServicios.IServicioWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioWCFClient : System.ServiceModel.ClientBase<Sitio.ReferenciaServicios.IServicioWCF>, Sitio.ReferenciaServicios.IServicioWCF {
        
        public ServicioWCFClient() {
        }
        
        public ServicioWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertarProveedor(Entidades.PROVEEDOR dato) {
            return base.Channel.InsertarProveedor(dato);
        }
        
        public System.Threading.Tasks.Task<int> InsertarProveedorAsync(Entidades.PROVEEDOR dato) {
            return base.Channel.InsertarProveedorAsync(dato);
        }
        
        public bool ModificarProveedor(Entidades.PROVEEDOR dato) {
            return base.Channel.ModificarProveedor(dato);
        }
        
        public System.Threading.Tasks.Task<bool> ModificarProveedorAsync(Entidades.PROVEEDOR dato) {
            return base.Channel.ModificarProveedorAsync(dato);
        }
        
        public bool EliminarProveedor(Entidades.PROVEEDOR dato) {
            return base.Channel.EliminarProveedor(dato);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarProveedorAsync(Entidades.PROVEEDOR dato) {
            return base.Channel.EliminarProveedorAsync(dato);
        }
        
        public System.Collections.Generic.List<Entidades.PROVEEDOR> RetonarListadoProveedores() {
            return base.Channel.RetonarListadoProveedores();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Entidades.PROVEEDOR>> RetonarListadoProveedoresAsync() {
            return base.Channel.RetonarListadoProveedoresAsync();
        }
        
        public Entidades.PROVEEDOR RetornarProveedorPorCed(Entidades.PROVEEDOR dato) {
            return base.Channel.RetornarProveedorPorCed(dato);
        }
        
        public System.Threading.Tasks.Task<Entidades.PROVEEDOR> RetornarProveedorPorCedAsync(Entidades.PROVEEDOR dato) {
            return base.Channel.RetornarProveedorPorCedAsync(dato);
        }
    }
}
